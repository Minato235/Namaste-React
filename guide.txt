npm init-way to install devDependencies,Dependencies
npm i -D  parcel(development build)
parcel uses babel and needs lot of Dependencies
npm install-will install node_modules
npx->excuting pakage
npm-instal pakage we use
instead of cdn we need to keep react in pakage.json file it is easy to manage 
npm i react && npm i react-Dom
import React from "react";
import reactDom from "react-dom"; in (app.js)
normal js file didt had a imports , so we needto add type=module
remove   "main": "App.js",

#parcel(bundler)=>
Dev Build
Local Server
HMR-hot module Relacement(it works like live server )
File Watching Algoritham-written c++(when we save it will build again)
Caching(.parcel-cache)-Faster builds
Image optimization
Manification
Bundling
Compressing
Diff Bundling-(we can config browser version)
works on https 
Tree Shaking-remove unused code for u
npx parcel index.html (development)
npx parcel build index.html(making production ready and do the things && create new dist folder)
//using react(! development friendly)
// const heading = React.createElement("h1", { id: "heading" }, "Namaste React");
//jsx=>HTML-Like syntax(tranplied before it reaches the js engine)(jsx+{})(jsx take care of cross section attacks etc)
if we are giving jsx attribute we need to give it in camelCase
// tranplied by parcel with help of babel
//React Fragement(it coming from import React)(<></> or <React.Fragement><React.Fragement/> )(Entiy tag)
